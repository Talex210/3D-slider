{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Exine\\\\src\\\\components\\\\DiagonalCardSlider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport './DiagonalCardSlider.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiagonalCardSlider = () => {\n  _s();\n  const [offset, setOffset] = useState(0);\n  const sliderRef = useRef(null);\n  const isDragging = useRef(false);\n  const startX = useRef(0);\n  const startOffset = useRef(0);\n\n  // Список изображений (дублируем для бесконечности)\n  const originalCards = [{\n    id: 1,\n    src: '/imgCard/4182c3a36ae0287e74f45e4bc4b0478087395003.png',\n    alt: 'Card 1'\n  }, {\n    id: 2,\n    src: '/imgCard/59ba5cf45380257ee8e166783aea5b97c3ea0cdc.png',\n    alt: 'Card 2'\n  }, {\n    id: 3,\n    src: '/imgCard/7a09640693403a43979b9a4739084f32d370db3c.png',\n    alt: 'Card 3'\n  }, {\n    id: 4,\n    src: '/imgCard/917b42be1295ce1f172cb33877e54f1dec65e57f.png',\n    alt: 'Card 4'\n  }, {\n    id: 5,\n    src: '/imgCard/a45850229f15ef811703228f465820f420082051.png',\n    alt: 'Card 5'\n  }, {\n    id: 6,\n    src: '/imgCard/ba47b00bf8270ce37d877ac1a7145dc748420631.png',\n    alt: 'Card 6'\n  }, {\n    id: 7,\n    src: '/imgCard/d2e3ad2a21dceaaeafc305c81f44cd9f06b16da3.png',\n    alt: 'Card 7'\n  }];\n  const cardSpacing = 80; // расстояние между карточками в стопке\n  const totalCards = originalCards.length;\n\n  // Обработка мыши\n  const handleMouseDown = useCallback(e => {\n    isDragging.current = true;\n    startX.current = e.clientX;\n    startOffset.current = offset;\n    document.body.style.cursor = 'grabbing';\n    e.preventDefault();\n  }, [offset]);\n  const handleMouseMove = useCallback(e => {\n    if (!isDragging.current) return;\n    const deltaX = e.clientX - startX.current;\n    const newOffset = startOffset.current + deltaX;\n    setOffset(newOffset);\n  }, []);\n  const handleMouseUp = useCallback(() => {\n    isDragging.current = false;\n    document.body.style.cursor = 'default';\n  }, []);\n\n  // Обработка колесика мыши для навигации по стопке\n  const handleWheel = useCallback(e => {\n    e.preventDefault();\n    const delta = e.deltaY > 0 ? -cardSpacing : cardSpacing;\n    setOffset(prev => prev + delta);\n  }, [cardSpacing]);\n\n  // Добавляем глобальные обработчики мыши\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagonal-slider-container\",\n    ref: sliderRef,\n    onMouseDown: handleMouseDown,\n    onWheel: handleWheel,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagonal-slider-scene\",\n      children: (() => {\n        const visibleCards = [];\n\n        // Центрируем стопку на экране\n        const centerX = window.innerWidth / 2;\n        const centerY = window.innerHeight / 2;\n\n        // Определяем диапазон карточек для отрисовки\n        const maxVisibleCards = 15; // максимум карточек в стопке\n        const currentCardIndex = Math.floor(-offset / cardSpacing);\n\n        // Рендерим карточки в стопке\n        for (let i = 0; i < maxVisibleCards; i++) {\n          const cardIndex = ((currentCardIndex + i) % totalCards + totalCards) % totalCards;\n          const card = originalCards[cardIndex];\n\n          // Позиция карточки в стопке (каждая следующая глубже)\n          const stackPosition = i + offset / cardSpacing % 1;\n\n          // 3D позиционирование: каждая карточка глубже предыдущей\n          const stackX = centerX - 150; // смещение влево от центра\n          const stackY = centerY - 200 + stackPosition * 8; // небольшое смещение вниз для каждой карточки\n          const stackZ = -stackPosition * 50; // глубина в стопке\n\n          // Повороты: 60 градусов по X (назад) и 15 градусов по Y (вправо)\n          const rotateX = -60; // поворот назад\n          const rotateY = 15 + stackPosition * 2; // небольшой дополнительный поворот для глубины\n          const rotateZ = stackPosition * 1; // легкий поворот для естественности\n\n          // Масштаб уменьшается с глубиной\n          const scale = 1 - stackPosition * 0.05;\n\n          // Прозрачность уменьшается для дальних карточек\n          const opacity = Math.max(0.3, 1 - stackPosition * 0.08);\n\n          // Z-index: ближние карточки выше\n          const zIndex = 1000 - i;\n          visibleCards.push(/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stack-card\",\n            style: {\n              transform: `translate3d(${stackX}px, ${stackY}px, ${stackZ}px) \n                             rotateX(${rotateX}deg) \n                             rotateY(${rotateY}deg) \n                             rotateZ(${rotateZ}deg) \n                             scale(${scale})`,\n              zIndex: zIndex,\n              opacity: opacity\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: card.src,\n              alt: card.alt,\n              draggable: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-shadow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, `card-${currentCardIndex + i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this));\n        }\n        return visibleCards;\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(DiagonalCardSlider, \"x8fqrIIoLhNtb2WphNJjE/ld3po=\");\n_c = DiagonalCardSlider;\nexport default DiagonalCardSlider;\nvar _c;\n$RefreshReg$(_c, \"DiagonalCardSlider\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","jsxDEV","_jsxDEV","DiagonalCardSlider","_s","offset","setOffset","sliderRef","isDragging","startX","startOffset","originalCards","id","src","alt","cardSpacing","totalCards","length","handleMouseDown","e","current","clientX","document","body","style","cursor","preventDefault","handleMouseMove","deltaX","newOffset","handleMouseUp","handleWheel","delta","deltaY","prev","addEventListener","removeEventListener","className","ref","onMouseDown","onWheel","children","visibleCards","centerX","window","innerWidth","centerY","innerHeight","maxVisibleCards","currentCardIndex","Math","floor","i","cardIndex","card","stackPosition","stackX","stackY","stackZ","rotateX","rotateY","rotateZ","scale","opacity","max","zIndex","push","transform","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/Exine/src/components/DiagonalCardSlider.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport './DiagonalCardSlider.css';\r\n\r\ninterface CardData {\r\n  id: number;\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nconst DiagonalCardSlider: React.FC = () => {\r\n  const [offset, setOffset] = useState<number>(0);\r\n  const sliderRef = useRef<HTMLDivElement>(null);\r\n  const isDragging = useRef<boolean>(false);\r\n  const startX = useRef<number>(0);\r\n  const startOffset = useRef<number>(0);\r\n\r\n  // Список изображений (дублируем для бесконечности)\r\n  const originalCards: CardData[] = [\r\n    { id: 1, src: '/imgCard/4182c3a36ae0287e74f45e4bc4b0478087395003.png', alt: 'Card 1' },\r\n    { id: 2, src: '/imgCard/59ba5cf45380257ee8e166783aea5b97c3ea0cdc.png', alt: 'Card 2' },\r\n    { id: 3, src: '/imgCard/7a09640693403a43979b9a4739084f32d370db3c.png', alt: 'Card 3' },\r\n    { id: 4, src: '/imgCard/917b42be1295ce1f172cb33877e54f1dec65e57f.png', alt: 'Card 4' },\r\n    { id: 5, src: '/imgCard/a45850229f15ef811703228f465820f420082051.png', alt: 'Card 5' },\r\n    { id: 6, src: '/imgCard/ba47b00bf8270ce37d877ac1a7145dc748420631.png', alt: 'Card 6' },\r\n    { id: 7, src: '/imgCard/d2e3ad2a21dceaaeafc305c81f44cd9f06b16da3.png', alt: 'Card 7' }\r\n  ];\r\n\r\n  const cardSpacing = 80; // расстояние между карточками в стопке\r\n  const totalCards = originalCards.length;\r\n\r\n  // Обработка мыши\r\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\r\n    isDragging.current = true;\r\n    startX.current = e.clientX;\r\n    startOffset.current = offset;\r\n    document.body.style.cursor = 'grabbing';\r\n    e.preventDefault();\r\n  }, [offset]);\r\n\r\n  const handleMouseMove = useCallback((e: MouseEvent) => {\r\n    if (!isDragging.current) return;\r\n\r\n    const deltaX = e.clientX - startX.current;\r\n    const newOffset = startOffset.current + deltaX;\r\n    setOffset(newOffset);\r\n  }, []);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    isDragging.current = false;\r\n    document.body.style.cursor = 'default';\r\n  }, []);\r\n\r\n  // Обработка колесика мыши для навигации по стопке\r\n  const handleWheel = useCallback((e: React.WheelEvent) => {\r\n    e.preventDefault();\r\n    const delta = e.deltaY > 0 ? -cardSpacing : cardSpacing;\r\n    setOffset(prev => prev + delta);\r\n  }, [cardSpacing]);\r\n\r\n\r\n\r\n  // Добавляем глобальные обработчики мыши\r\n  useEffect(() => {\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, [handleMouseMove, handleMouseUp]);\r\n\r\n  return (\r\n    <div\r\n      className=\"diagonal-slider-container\"\r\n      ref={sliderRef}\r\n      onMouseDown={handleMouseDown}\r\n      onWheel={handleWheel}\r\n    >\r\n      <div className=\"diagonal-slider-scene\">\r\n        {(() => {\r\n          const visibleCards = [];\r\n\r\n          // Центрируем стопку на экране\r\n          const centerX = window.innerWidth / 2;\r\n          const centerY = window.innerHeight / 2;\r\n\r\n          // Определяем диапазон карточек для отрисовки\r\n          const maxVisibleCards = 15; // максимум карточек в стопке\r\n          const currentCardIndex = Math.floor(-offset / cardSpacing);\r\n          \r\n          // Рендерим карточки в стопке\r\n          for (let i = 0; i < maxVisibleCards; i++) {\r\n            const cardIndex = ((currentCardIndex + i) % totalCards + totalCards) % totalCards;\r\n            const card = originalCards[cardIndex];\r\n\r\n            // Позиция карточки в стопке (каждая следующая глубже)\r\n            const stackPosition = i + (offset / cardSpacing) % 1;\r\n            \r\n            // 3D позиционирование: каждая карточка глубже предыдущей\r\n            const stackX = centerX - 150; // смещение влево от центра\r\n            const stackY = centerY - 200 + (stackPosition * 8); // небольшое смещение вниз для каждой карточки\r\n            const stackZ = -stackPosition * 50; // глубина в стопке\r\n\r\n            // Повороты: 60 градусов по X (назад) и 15 градусов по Y (вправо)\r\n            const rotateX = -60; // поворот назад\r\n            const rotateY = 15 + (stackPosition * 2); // небольшой дополнительный поворот для глубины\r\n            const rotateZ = stackPosition * 1; // легкий поворот для естественности\r\n\r\n            // Масштаб уменьшается с глубиной\r\n            const scale = 1 - (stackPosition * 0.05);\r\n\r\n            // Прозрачность уменьшается для дальних карточек\r\n            const opacity = Math.max(0.3, 1 - (stackPosition * 0.08));\r\n\r\n            // Z-index: ближние карточки выше\r\n            const zIndex = 1000 - i;\r\n\r\n            visibleCards.push(\r\n              <div\r\n                key={`card-${currentCardIndex + i}`}\r\n                className=\"stack-card\"\r\n                style={{\r\n                  transform: `translate3d(${stackX}px, ${stackY}px, ${stackZ}px) \r\n                             rotateX(${rotateX}deg) \r\n                             rotateY(${rotateY}deg) \r\n                             rotateZ(${rotateZ}deg) \r\n                             scale(${scale})`,\r\n                  zIndex: zIndex,\r\n                  opacity: opacity\r\n                }}\r\n              >\r\n                <img\r\n                  src={card.src}\r\n                  alt={card.alt}\r\n                  draggable={false}\r\n                />\r\n                <div className=\"card-shadow\" />\r\n              </div>\r\n            );\r\n          }\r\n\r\n          return visibleCards;\r\n        })()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiagonalCardSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}