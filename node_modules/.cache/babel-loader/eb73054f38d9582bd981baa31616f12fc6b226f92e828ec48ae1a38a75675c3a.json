{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Exine\\\\src\\\\components\\\\DiagonalCardSlider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport './DiagonalCardSlider.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiagonalCardSlider = () => {\n  _s();\n  const [offset, setOffset] = useState(0);\n  const sliderRef = useRef(null);\n  const isDragging = useRef(false);\n  const startX = useRef(0);\n  const startOffset = useRef(0);\n\n  // Список изображений (дублируем для бесконечности)\n  const originalCards = [{\n    id: 1,\n    src: '/imgCard/4182c3a36ae0287e74f45e4bc4b0478087395003.png',\n    alt: 'Card 1'\n  }, {\n    id: 2,\n    src: '/imgCard/59ba5cf45380257ee8e166783aea5b97c3ea0cdc.png',\n    alt: 'Card 2'\n  }, {\n    id: 3,\n    src: '/imgCard/7a09640693403a43979b9a4739084f32d370db3c.png',\n    alt: 'Card 3'\n  }, {\n    id: 4,\n    src: '/imgCard/917b42be1295ce1f172cb33877e54f1dec65e57f.png',\n    alt: 'Card 4'\n  }, {\n    id: 5,\n    src: '/imgCard/a45850229f15ef811703228f465820f420082051.png',\n    alt: 'Card 5'\n  }, {\n    id: 6,\n    src: '/imgCard/ba47b00bf8270ce37d877ac1a7145dc748420631.png',\n    alt: 'Card 6'\n  }, {\n    id: 7,\n    src: '/imgCard/d2e3ad2a21dceaaeafc305c81f44cd9f06b16da3.png',\n    alt: 'Card 7'\n  }];\n  const cardSpacing = 200; // расстояние между карточками по диагонали\n  const totalCards = originalCards.length;\n\n  // Обработка мыши\n  const handleMouseDown = useCallback(e => {\n    isDragging.current = true;\n    startX.current = e.clientX;\n    startOffset.current = offset;\n    document.body.style.cursor = 'grabbing';\n    e.preventDefault();\n  }, [offset]);\n  const handleMouseMove = useCallback(e => {\n    if (!isDragging.current) return;\n    const deltaX = e.clientX - startX.current;\n    const newOffset = startOffset.current + deltaX;\n    setOffset(newOffset);\n  }, []);\n  const handleMouseUp = useCallback(() => {\n    isDragging.current = false;\n    document.body.style.cursor = 'default';\n  }, []);\n\n  // Обработка колесика мыши\n  const handleWheel = useCallback(e => {\n    e.preventDefault();\n    const delta = e.deltaY > 0 ? -50 : 50;\n    setOffset(prev => prev + delta);\n  }, []);\n\n  // Добавляем глобальные обработчики мыши\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagonal-slider-container\",\n    ref: sliderRef,\n    onMouseDown: handleMouseDown,\n    onWheel: handleWheel,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagonal-slider-scene\",\n      children: (() => {\n        const visibleCards = [];\n\n        // Центрируем диагональ на экране\n        const centerX = window.innerWidth / 2;\n        const centerY = window.innerHeight / 2;\n        const diagonalStartX = centerX - 800;\n        const diagonalStartY = centerY + 200;\n\n        // Определяем диапазон карточек, которые нужно отрисовать\n        const screenBuffer = 800; // буфер за пределами экрана\n        const startScreenX = -screenBuffer;\n        const endScreenX = window.innerWidth + screenBuffer;\n\n        // Вычисляем какие позиции карточек попадают в видимую область\n        const startPosition = Math.floor((startScreenX - diagonalStartX - offset) / cardSpacing) - 1;\n        const endPosition = Math.ceil((endScreenX - diagonalStartX - offset) / cardSpacing) + 1;\n\n        // Рендерим только нужные карточки\n        for (let position = startPosition; position <= endPosition; position++) {\n          // Используем модульную арифметику для бесконечного повторения\n          const cardIndex = (position % totalCards + totalCards) % totalCards;\n          const card = originalCards[cardIndex];\n\n          // Позиция карточки\n          const baseX = position * cardSpacing + offset;\n          const baseY = -(position * cardSpacing * 0.6) - offset * 0.6;\n          const baseZ = -(cardIndex * 30);\n          const diagonalX = baseX + diagonalStartX;\n          const diagonalY = baseY + diagonalStartY;\n          const diagonalZ = baseZ;\n\n          // Простая и надежная логика z-index для эффекта книжной полки\n          // Карточки справа (большая позиция) всегда выше карточек слева\n          // Это создает эффект наложения как у книг на полке\n          const zIndex = 1000 + position;\n          visibleCards.push(/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"diagonal-card\",\n            style: {\n              transform: `translate3d(${diagonalX}px, ${diagonalY}px, ${diagonalZ}px)`,\n              zIndex: zIndex,\n              opacity: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: card.src,\n              alt: card.alt,\n              draggable: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-shadow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, `card-${position}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this));\n        }\n        return visibleCards;\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(DiagonalCardSlider, \"x8fqrIIoLhNtb2WphNJjE/ld3po=\");\n_c = DiagonalCardSlider;\nexport default DiagonalCardSlider;\nvar _c;\n$RefreshReg$(_c, \"DiagonalCardSlider\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","jsxDEV","_jsxDEV","DiagonalCardSlider","_s","offset","setOffset","sliderRef","isDragging","startX","startOffset","originalCards","id","src","alt","cardSpacing","totalCards","length","handleMouseDown","e","current","clientX","document","body","style","cursor","preventDefault","handleMouseMove","deltaX","newOffset","handleMouseUp","handleWheel","delta","deltaY","prev","addEventListener","removeEventListener","className","ref","onMouseDown","onWheel","children","visibleCards","centerX","window","innerWidth","centerY","innerHeight","diagonalStartX","diagonalStartY","screenBuffer","startScreenX","endScreenX","startPosition","Math","floor","endPosition","ceil","position","cardIndex","card","baseX","baseY","baseZ","diagonalX","diagonalY","diagonalZ","zIndex","push","transform","opacity","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/Exine/src/components/DiagonalCardSlider.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport './DiagonalCardSlider.css';\r\n\r\ninterface CardData {\r\n  id: number;\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nconst DiagonalCardSlider: React.FC = () => {\r\n  const [offset, setOffset] = useState<number>(0);\r\n  const sliderRef = useRef<HTMLDivElement>(null);\r\n  const isDragging = useRef<boolean>(false);\r\n  const startX = useRef<number>(0);\r\n  const startOffset = useRef<number>(0);\r\n\r\n  // Список изображений (дублируем для бесконечности)\r\n  const originalCards: CardData[] = [\r\n    { id: 1, src: '/imgCard/4182c3a36ae0287e74f45e4bc4b0478087395003.png', alt: 'Card 1' },\r\n    { id: 2, src: '/imgCard/59ba5cf45380257ee8e166783aea5b97c3ea0cdc.png', alt: 'Card 2' },\r\n    { id: 3, src: '/imgCard/7a09640693403a43979b9a4739084f32d370db3c.png', alt: 'Card 3' },\r\n    { id: 4, src: '/imgCard/917b42be1295ce1f172cb33877e54f1dec65e57f.png', alt: 'Card 4' },\r\n    { id: 5, src: '/imgCard/a45850229f15ef811703228f465820f420082051.png', alt: 'Card 5' },\r\n    { id: 6, src: '/imgCard/ba47b00bf8270ce37d877ac1a7145dc748420631.png', alt: 'Card 6' },\r\n    { id: 7, src: '/imgCard/d2e3ad2a21dceaaeafc305c81f44cd9f06b16da3.png', alt: 'Card 7' }\r\n  ];\r\n\r\n  const cardSpacing = 200; // расстояние между карточками по диагонали\r\n  const totalCards = originalCards.length;\r\n\r\n  // Обработка мыши\r\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\r\n    isDragging.current = true;\r\n    startX.current = e.clientX;\r\n    startOffset.current = offset;\r\n    document.body.style.cursor = 'grabbing';\r\n    e.preventDefault();\r\n  }, [offset]);\r\n\r\n  const handleMouseMove = useCallback((e: MouseEvent) => {\r\n    if (!isDragging.current) return;\r\n\r\n    const deltaX = e.clientX - startX.current;\r\n    const newOffset = startOffset.current + deltaX;\r\n    setOffset(newOffset);\r\n  }, []);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    isDragging.current = false;\r\n    document.body.style.cursor = 'default';\r\n  }, []);\r\n\r\n  // Обработка колесика мыши\r\n  const handleWheel = useCallback((e: React.WheelEvent) => {\r\n    e.preventDefault();\r\n    const delta = e.deltaY > 0 ? -50 : 50;\r\n    setOffset(prev => prev + delta);\r\n  }, []);\r\n\r\n\r\n\r\n  // Добавляем глобальные обработчики мыши\r\n  useEffect(() => {\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, [handleMouseMove, handleMouseUp]);\r\n\r\n  return (\r\n    <div\r\n      className=\"diagonal-slider-container\"\r\n      ref={sliderRef}\r\n      onMouseDown={handleMouseDown}\r\n      onWheel={handleWheel}\r\n    >\r\n      <div className=\"diagonal-slider-scene\">\r\n        {(() => {\r\n          const visibleCards = [];\r\n\r\n          // Центрируем диагональ на экране\r\n          const centerX = window.innerWidth / 2;\r\n          const centerY = window.innerHeight / 2;\r\n          const diagonalStartX = centerX - 800;\r\n          const diagonalStartY = centerY + 200;\r\n\r\n          // Определяем диапазон карточек, которые нужно отрисовать\r\n          const screenBuffer = 800; // буфер за пределами экрана\r\n          const startScreenX = -screenBuffer;\r\n          const endScreenX = window.innerWidth + screenBuffer;\r\n\r\n          // Вычисляем какие позиции карточек попадают в видимую область\r\n          const startPosition = Math.floor((startScreenX - diagonalStartX - offset) / cardSpacing) - 1;\r\n          const endPosition = Math.ceil((endScreenX - diagonalStartX - offset) / cardSpacing) + 1;\r\n\r\n          // Рендерим только нужные карточки\r\n          for (let position = startPosition; position <= endPosition; position++) {\r\n            // Используем модульную арифметику для бесконечного повторения\r\n            const cardIndex = ((position % totalCards) + totalCards) % totalCards;\r\n            const card = originalCards[cardIndex];\r\n\r\n            // Позиция карточки\r\n            const baseX = position * cardSpacing + offset;\r\n            const baseY = -(position * cardSpacing * 0.6) - (offset * 0.6);\r\n            const baseZ = -(cardIndex * 30);\r\n\r\n            const diagonalX = baseX + diagonalStartX;\r\n            const diagonalY = baseY + diagonalStartY;\r\n            const diagonalZ = baseZ;\r\n\r\n            // Простая и надежная логика z-index для эффекта книжной полки\r\n            // Карточки справа (большая позиция) всегда выше карточек слева\r\n            // Это создает эффект наложения как у книг на полке\r\n            const zIndex = 1000 + position;\r\n\r\n            visibleCards.push(\r\n              <div\r\n                key={`card-${position}`}\r\n                className=\"diagonal-card\"\r\n                style={{\r\n                  transform: `translate3d(${diagonalX}px, ${diagonalY}px, ${diagonalZ}px)`,\r\n                  zIndex: zIndex,\r\n                  opacity: 1\r\n                }}\r\n              >\r\n                <img\r\n                  src={card.src}\r\n                  alt={card.alt}\r\n                  draggable={false}\r\n                />\r\n                <div className=\"card-shadow\" />\r\n              </div>\r\n            );\r\n          }\r\n\r\n          return visibleCards;\r\n        })()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiagonalCardSlider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}